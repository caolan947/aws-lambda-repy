name: CI/CD pipeline

on:
  push:
    branches:
      - 'main'
      - '**'
  delete:
    branches:
      - '**'

env:
  TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
  PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  PYTHON_VERSION: '3.10'

jobs:
  test:
    name: Running unit tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      # - name: Test with unittest
      #   run: |
      #     cd libname
      #     python -m unittest discover -s ./test  -p 'test_*.py'

  build-n-publish-test:
    name: Build and publish to Test PyPI
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  build-n-publish:
    name: Build and publish to PyPI
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}